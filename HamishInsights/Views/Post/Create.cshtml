@model PostViewModel

@{
	ViewData["Title"] = "Create Post";
}


﻿<style>
	 .content-wrapper {
		 padding: 20px;
		 max-width: 1000px;
		 margin: 0 auto;
		 font-family: Arial, sans-serif;
	 }
</style>

<div class="content-wrapper box-shadow"> 
	<div class="row">
		<div class="col-12 col-md-6">
			<h2>@ViewData["Title"]</h2>
		</div>
		<div class="col-12 col-md-6 text-end">
			<a asp-action="Index" asp-controller="Post" class="btn btn-primary rounded ">Back to List</a>
		</div>
	</div>

	<hr />

	<form asp-action="Create" asp-controller="Post" method="post" enctype="multipart/form-data">
		<!-- Validation Summary -->
		@* <div class="validation-summary"> *@
		@* 	<div asp-validation-summary="All" class="text-danger"></div> *@
		@* </div> *@

		<div class="form-group">
			<label asp-for="Post.Title"></label>
			<input asp-for="Post.Title" class="form-control border-0 mb-2" />
			<span asp-validation-for="Post.Title" class="text-danger"></span>
		</div>

		<div class="form-group">
			<label asp-for="Post.CategoryId">Categories</label>
			<select asp-for="Post.CategoryId" asp-items="Model.Categories" class="form-control border-0 mb-2">
				<option value="">Select Category</option>
			</select>
			<span asp-validation-for="Post.CategoryId" class="text-danger"></span>
		</div>

		<div class="form-group">
			<label asp-for="Post.Author"></label>
			<input asp-for="Post.Author" class="form-control border-0 mb-2" />
			<span asp-validation-for="Post.Author" class="text-danger"></span>
		</div>

		<div class="for-group">
			<label asp-for="Post.Content"></label>
			<textarea asp-for="Post.Content" class="form-control border-0" rows="5"></textarea>
			<span asp-validation-for="Post.Content"></span>
		</div>

		<div class="form-group">
			<label asp-for="FeatureImage"></label>
			<input asp-for="FeatureImage" class="form-control border-0" />
		</div>

		<button type="submit" class="btn btn-primary mt-1">Create</button>
		<a asp-action="Index" class="btn btn-secondary mt-1">Back to List</a>
	</form>
	<hr />
</div>

@section Scripts
{
	<script src="https://cdn.tiny.cloud/1/fa4gwze2m1bvdhj5oh5qrspch07dja83e8xz07u33niciusg/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
	<script>
				tinymce.init({
		  selector: 'textarea',
		  plugins: [
			// Core editing features
			'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
			// Your account includes a free trial of TinyMCE premium features
			// Try the most popular premium features until Mar 18, 2025:
			'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
		  ],
		  toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
		  tinycomments_mode: 'embedded',
		  tinycomments_author: 'Author name',
		  mergetags_list: [
			{ value: 'First.Name', title: 'First Name' },
			{ value: 'Email', title: 'Email' },
		  ],
		  ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
		});
	</script>
}



